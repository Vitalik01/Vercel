name: Automatic Deploy to Vercel

on:
  push:
    branches:
      - "**"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Preview
        if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/prod'
        run: |
          DEPLOY_OUTPUT=$(vercel --prod=false --confirm --token ${{ secrets.VERCEL_TOKEN }})
          PREVIEW_URL=$(echo "$DEPLOY_OUTPUT" | grep -o 'https://[^ ]*')
          echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Staging
        if: github.ref == 'refs/heads/main'
        run: |
          DEPLOY_OUTPUT=$(vercel --prod=false --token ${{ secrets.VERCEL_TOKEN }} --confirm)
          PREVIEW_URL=$(echo "$DEPLOY_OUTPUT" | grep -o 'https://[^ ]*')
          echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Production
        if: github.ref == 'refs/heads/prod'
        run: |
          DEPLOY_OUTPUT=$(vercel --prod=true --token ${{ secrets.VERCEL_TOKEN }} --confirm)
          PREVIEW_URL=$(echo "$DEPLOY_OUTPUT" | grep -o 'https://[^ ]*')
          echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Update Auth0 Configuration
        run: |
          # Obtain Auth0 Management API token
          AUTH0_TOKEN=$(curl --request POST \
            --url "https://${{ env.AUTH0_DOMAIN }}/oauth/token" \
            --header 'content-type: application/json' \
            --data "{\"client_id\":\"${{ env.AUTH0_CLIENT_ID }}\",\"client_secret\":\"${{ env.AUTH0_CLIENT_SECRET }}\",\"audience\":\"https://${{ env.AUTH0_DOMAIN }}/api/v2/\",\"grant_type\":\"client_credentials\"}" | jq -r '.access_token')

          # Update Auth0 client configuration with the new preview URL
          curl --request PATCH \
            --url "https://${{ env.AUTH0_DOMAIN }}/api/v2/clients/${{ env.PEARLS_AUTH0_CLIENT_ID }}" \
            --header "authorization: Bearer $AUTH0_TOKEN" \
            --header 'content-type: application/json' \
            --data "{\"callbacks\":[\"${PREVIEW_URL/api\/auth\/callback}\"],\"web_origins\":[\"${PREVIEW_URL}\"],\"allowed_logout_urls\":[\"${PREVIEW_URL}\"]}"
        env:
          PREVIEW_URL: ${{ env.PREVIEW_URL }}
          AUTH0_DOMAIN: pearls-dev.eu.auth0.com
          AUTH0_CLIENT_ID: 7CpRLhbKMKq4XQOikgU1L9eF9mx1YGi8
          PEARLS_AUTH0_CLIENT_ID: q1VmztarYLEAZ7ecuEgdna5BYmL0qCME
          AUTH0_CLIENT_SECRET: 3ks1rV-5y51SbExg5diygRrTfeJFTbrzdCsX2xqoAcloazEn04Hl82aLvUXRfzEH

      - name: Comment on Pull Request
        if: github.event.pull_request.head.ref != 'main' && github.event.pull_request.head.ref != 'prod'
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PREVIEW_URL=${{ env.PREVIEW_URL }}
          COMMENT="Preview deployment: [Preview Link](${PREVIEW_URL})"
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -d "{\"body\":\"$COMMENT\"}" \
               -X POST "https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
