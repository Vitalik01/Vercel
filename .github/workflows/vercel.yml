name: Automatic Deploy to Vercel

on:
  push:
    branches:
      - main
      - Create-yml-for-vercel-Deploy
      - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Preview
        if: github.ref == 'refs/heads/Create-yml-for-vercel-Deploy'
        run: |
          vercel --prod=false --token ${{ secrets.VERCEL_TOKEN }} --confirm 
          # Capture the preview URL
          echo "::set-output name=PREVIEW_URL::$(vercel --json | jq -r '.[0].url')"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Staging
        if: github.ref == 'refs/heads/main'
        run: |
          vercel --prod=false --token ${{ secrets.VERCEL_TOKEN }} --confirm
          # Capture the preview URL
          echo "::set-output name=PREVIEW_URL::$(vercel --json | jq -r '.[0].url')"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Production
        if: github.ref == 'refs/heads/prod'
        run: |
          vercel --prod=true --token ${{ secrets.VERCEL_TOKEN }} --confirm
          # Capture the production URL
          echo "::set-output name=PRODUCTION_URL::$(vercel --json | jq -r '.[0].url')"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Comment on Pull Request
        run: |
          PR_URL=$(jq -r '.pull_request.url' "$GITHUB_EVENT_PATH")
          if [ -n "${PREVIEW_URL}" ]; then
            COMMENT="Preview deployment: [Preview Link](${PREVIEW_URL})"
          elif [ -n "${PRODUCTION_URL}" ]; then
            COMMENT="Production deployment: [Production Link](${PRODUCTION_URL})"
          else
            COMMENT="Deployment link not found."
          fi
          curl -s -H "Authorization: token $GITHUB_TOKEN" -d "{\"body\":\"$COMMENT\"}" -X POST "$PR_URL/comments"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PREVIEW_URL: ${{ steps.deploy.outputs.PREVIEW_URL }}
          PRODUCTION_URL: ${{ steps.deploy.outputs.PRODUCTION_URL }}
